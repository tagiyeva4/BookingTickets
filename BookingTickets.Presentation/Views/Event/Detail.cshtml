@model Event

<link rel="stylesheet" href="~/css/eventdetail.css" />

<!--Event Details Start-->
<section class="event-details">
    <div class="container">
        <div class="row">
            <div class="col-xl-8 col-lg-7">
                <div class="event-details__left">
                    <div class="event-details__img">
                        @foreach(var image in Model.EventImages)
                        {
                            <img src=@image.ImagePath alt="">
                        }
                    </div>
                    <div class="event-details__main-tab-box tabs-box">
                        <ul class="tab-buttons clearfix list-unstyled">
                            <li data-tab="#year-1" class="tab-btn active-btn">
                                @Model.EventsSchedules.FirstOrDefault(x=>x.EventId==Model.Id)?.Schedule.Date.ToString("yyyy")
                            </li>
                        </ul>
                        <div class="tabs-content">
                            <!--tab-->
                            <div class="tab active-tab" id="year-1">
                                <div class="event-details__tab-content-box">
                                    <ul class="event-details__meta list-unstyled">
                                        <li>
                                            <p>
                                                <span class="icon-clock"></span>
                                                @foreach(var schedule in Model.EventsSchedules)
                                                {
                                                var start = schedule.Schedule.Date.Add(schedule.Schedule.StartTime);
                                                var end = schedule.Schedule.Date.Add(schedule.Schedule.EndTime);
                                                    <div>
                                                        @($"{start:dd MMM yyyy HH:mm} - {end:HH:mm}")
                                                    </div>
                                                }
                                            </p>
                                        </li>
                                        <li>
                                            <p><span class="icon-pin"></span>@Model.Venue.Name</p>
                                        </li>
                                    </ul>
                                    <h3 class="event-details__title-1">@Model.Name</h3>

                                    <div class="event-details__img-box">
                                        <div class="row">
                                            @foreach (var image in Model.EventImages)
                                            {
                                                <div class="col-xl-6">
                                                    <div class="event-details__img-box-img">
                                                        <img src=@image.ImagePath
                                                             alt="">
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="event-details__points-box">
                                        <ul class="event-details__points list-unstyled">
                                            <li>
                                                <div class="icon">
                                                    <span class="icon-double-angle"></span>
                                                </div>
                                                <p>Creating Memories, One Event at a Time</p>
                                            </li>
                                            <li>
                                                <div class="icon">
                                                    <span class="icon-double-angle"></span>
                                                </div>
                                                <p>Celebrate in Style, Celebrate with Class</p>
                                            </li>
                                        </ul>
                                        <ul class="event-details__points list-unstyled">
                                            <li>
                                                <div class="icon">
                                                    <span class="icon-double-angle"></span>
                                                </div>
                                                <p>Where Events Come to Life</p>
                                            </li>
                                            <li>
                                                <div class="icon">
                                                    <span class="icon-double-angle"></span>
                                                </div>
                                                <p>Making Your Event Dreams Come True</p>
                                            </li>
                                        </ul>
                                    </div>
                                    <h3 class="event-details__text-3">
                                        @Model.Description
                                    </h3>



                                    <form method="post" asp-action="ReserveTicket" asp-controller="Basket" >
                                        <input type="hidden" name="eventId" value="@Model.Id" />
                                        <input type="hidden" name="seatId" id="selectedSeatId" />
                                        <div class="form-group text-center">
                                            <label for="scheduleSelect" class="fw-bold mb-2">Tədbir Tarixini Seçin</label>
                                            <select id="scheduleSelect" name="scheduleId" class="form-control test1234 w-50 mx-auto mb-4" required>
                                                <option value="">-- Tarixi seçin --</option>
                                                @foreach (var schedule in Model.EventsSchedules)
                                                {
                                                    var start = schedule.Schedule.Date.Add(schedule.Schedule.StartTime);
                                                    var end = schedule.Schedule.Date.Add(schedule.Schedule.EndTime);

                                                    <option value="@schedule.Schedule.Id">
                                                        @($"{start:dd MMM yyyy HH:mm} - {end:HH:mm}")
                                                    </option>
                                                }

                                            </select>
                                        </div>
                                       
                                        <div class="seat-map">
                                            <div class="stage">Səhnə</div>
                                            <div class="seat-grid">
                                                @foreach (var seat in Model.Venue.Seats.OrderBy(s => s.RowNumber).ThenBy(s => s.SeatNumber))
                                                {
                                                    var isTaken = Model.Tickets.Any(t => t.VenueSeatId == seat.Id &&
                                                    (t.Status == BookingTickets.Core.Enums.TicketStatus.Reserved ||
                                                    t.Status == BookingTickets.Core.Enums.TicketStatus.Purchased));
                                                    var seatClass = isTaken ? "seat unavailable" : "seat available";
                                                    <div class="@seatClass"
                                                         data-seat-id="@seat.Id"
                                                         data-seat-label="@seat.SeatLabel"
                                                         data-seat-price="@seat.Price.ToString("F0")">
                                                        @seat.SeatLabel<br />@seat.Price.ToString("F0") ₼
                                                    </div>
                                                }
                                            </div>
                                        </div>

                                        <div id="seatInfo" style="display:none;color:black" class="seat-info-container">
                                            Seçilmiş yer: <strong id="seatLabel"></strong> - <strong id="seatPrice"></strong> ₼
                                        </div>

                                        <div class="button-container">
                                            <button type="submit" class="gradient-btn" disabled id="submitBtn">
                                                Bileti Al <span class="arrow-icon">→</span>
                                            </button>
                                        </div>
                                    </form>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-4 col-lg-5">
                <div class="event-details__right">
                    <div class="event-details__speakers">
                        <h3 class="event-details__speakers-title">Speakers</h3>
                        <p class="event-details__speakers-sub-title">@(Model.EventPersons.Count)</p>
                        <p class="event-details__speakers-text">
                            Speaker – A person who delivers speeches, presentations, or <br />
                            motivational talks to inform, inspire, or persuade an audience.
                            Singer – A performer who uses their voice to create music, <br />
                            either solo or with a band, expressing emotions through melody and lyrics.
                        </p>
                    </div>
                    <div class="event-details__ticket">
                        <h4>
                            Price :( @Model.MinPrice - @Model.MaxPrice )₼
                        </h4>
                        <h4>
                            AgeRestriction : +@Model.AgeRestriction
                        </h4>
                        <h4>
                            Languages : @(String.Join(" , ", Model.EventLanguages.Select(pt => pt.Language.Name)))
                        </h4>
                    </div>
                    <div class="event-details__ticket-two">
                        <h3 class="event-details__ticket-two-title">Don’t have a ticket?</h3>
                        <p class="event-details__ticket-two-text">
                            Exciting Events Await! 🎉<br><br>
                            Join us for unforgettable events filled with entertainment, inspiration, and exclusive experiences!<br>
                            Whether it's concerts, conferences, or special gatherings, secure your spot now and be part of something amazing.<br>
                            Don’t miss out—book your tickets today! 🎟️✨
                        </p>
                        <div class="event-details__ticket-two-btn-box">
                            <a href="#" class="event-details__ticket-two-btn thm-btn">
                                Buy Ticket<span class="icon-arrow-right"></span>
                            </a>
                        </div>
                    </div>
                    <div class="event-details__location">
                        @*
                        <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d4562.753041141002!2d-118.80123790098536!3d34.152323469614075!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x80e82469c2162619%3A0xba03efb7998eef6d!2sCostco+Wholesale!5e0!3m2!1sbn!2sbd!4v1562518641290!5m2!1sbn!2sbd"
                                class="google-map__one" allowfullscreen></iframe> *@
                        <h3 class="event-details__location-title">@Model.Venue.Name</h3>
                        <div class="container mt-5">
                            @* <div class="card shadow-lg">
                                <div class="card-header text-center bg-primary text-white">

                                </div> *@
                            <div class="card-body">
                                <div id="map" style="height: 400px; border-radius: 10px;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="event-details__follow-us">
                        <h3 class="event-details__follow-us-title">Follow Us</h3>
                        <div class="event-details__follow-us-social">
                            <a href="#"><span class="icon-instagram"></span></a>
                            <a href="#"><span class="icon-facebook"></span></a>
                            <a href="#"><span class="icon-fi"></span></a>
                            <a href="#"><span class="icon-linkedin-in"></span></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>
<!--Event Details End-->
@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var latitude = @Model.Venue.Latitude;
            var longitude = @Model.Venue.Longitude;

            var map = L.map('map').setView([latitude, longitude], 12); // Venue koordinatları

            // Xəritə stilləri (Dark Mode)
            L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
                attribution: '&copy; <a href="https://carto.com/">CartoDB</a>'
            }).addTo(map);

            // Marker əlavə edirik
            L.marker([latitude, longitude]).addTo(map)
                .bindPopup(`<b>@Model.Venue.Name</b><br>@Model.Venue.Address`)
                .openPopup();
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Bütün mövcud yerləri tapaq
            const availableSeats = document.querySelectorAll('.seat.available');
            let selectedSeat = null;

            // Hər bir yerə klik hadisəsini əlavə edək
            availableSeats.forEach(function(seat) {
                seat.addEventListener('click', function() {
                    // Əvvəlki seçilmiş yeri təmizləyək
                    if (selectedSeat) {
                        selectedSeat.classList.remove('selected');
                    }

                    // İndiki yeri seçək
                    this.classList.add('selected');
                    selectedSeat = this;

                    // Gizli input sahəsinə yerin ID-sini yazaq
                    document.getElementById('selectedSeatId').value = this.dataset.seatId;

                    // Məlumat blokunu yeniləyək və göstərək
                    document.getElementById('seatLabel').textContent = this.dataset.seatLabel;
                    document.getElementById('seatPrice').textContent = this.dataset.seatPrice;
                    document.getElementById('seatInfo').style.display = 'block';

                    // Düyməni aktivləşdirək
                    document.getElementById('submitBtn').disabled = false;
                });
            });
        });
    </script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script>
        toastr.options = {
            closeButton: true,
            progressBar: true,
            positionClass: "toast-bottom-left",
            timeOut: 3000
        };

        @if (TempData["Success"] != null)
        {
            <text>toastr.success("@TempData["Success"]");</text>
        }

        @if (TempData["Error"] != null)
        {
            <text>toastr.error("@TempData["Error"]");</text>
        }
    </script>

    <script>
        console.log('salam')

const selectItem=document.querySelector('.test1234');  console.log(selectItem);       selectItem.addEventListener("input", function (e) {
            const scheduleId = e.target.value;
            const eventId = '@Model.Id';


            console.log(scheduleId)
            document.getElementById("selectedScheduleId").value = scheduleId;
            console.log("ScheduleId:", scheduleId);
            if (!scheduleId) return;

            fetch(`${host}/Event/GetReservedSeats?eventId=${eventId}&scheduleId=${scheduleId}`)
                .then(response => response.json())
                .then(reservedSeats => {
                    document.querySelectorAll(".seat").forEach(seat => {
                        const seatId = parseInt(seat.getAttribute("data-seat-id"));

                        if (reservedSeats.includes(seatId)) {
                            seat.classList.remove("available");
                            seat.classList.remove("selected");
                            seat.classList.add("unavailable");
                            seat.style.pointerEvents = "none";
                        } else {
                            seat.classList.remove("unavailable");
                            seat.classList.add("available");
                            seat.style.pointerEvents = "auto";
                        }
                    });

                    // Sifarişi təmizləyək (əgər başqa tarix seçilirsə)
                    document.getElementById('selectedSeatId').value = '';
                    document.getElementById('submitBtn').disabled = true;
                    document.getElementById('seatInfo').style.display = 'none';
                });
        });
    </script>

}
