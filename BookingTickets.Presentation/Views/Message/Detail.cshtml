
@using System.Security.Claims
@model Chat
@{
    Layout = null;
    string? userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Chat Detail</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/chatdetail.css" />

</head>
<body>

    <div class="chat-container">
        <div class="chat-header">
            @Model.Name
        </div>

        <div class="chat-body" id="chat-body">
            @foreach (var message in Model.Messages)
            {
                <div class="message @(message.SenderId == userId ? "sent" : "received")">
                    @message.Text
                </div>
            }
        </div>

        <div class="chat-footer">
            <input id="chat-input" type="text" placeholder="Type a message..." class="form-control">
            <button id="send-button" class="btn btn-success">Send</button>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const chatInput = document.getElementById('chat-input');
        const sendButton = document.getElementById('send-button');
        const chatBody = document.getElementById('chat-body');
        const chatId = @Model.Id;
        const userId = '@userId';

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.start().catch(err => console.error(err.toString()));

        sendButton.addEventListener('click', sendMessage);
        chatInput.addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

               async function sendMessage() {
            const text = chatInput.value.trim();
            if (text === '') return;
            console.log(text);
            addMessage(text, 'sent');
            chatInput.value = '';

            await fetch('/Message/SendMessage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json' // <<< JSON göndərəcəyik
                },
                body: JSON.stringify({
                    chatId: chatId,
                     text
                })
            });
        }


        connection.on("ReceiveMessage", function (message) {
            if (message.SenderId !== userId) {
                addMessage(message.text, 'received');
            }
        });

        function addMessage(text, type) {
            const div = document.createElement('div');
            div.className = `message ${type}`;
            div.textContent = text;
            chatBody.appendChild(div);
            chatBody.scrollTop = chatBody.scrollHeight;
        }
    </script>

</body>
</html>












